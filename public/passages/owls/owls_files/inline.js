(function(){var get_fields_for_model,get_model_for_instance,inline_get_field,inline_set_field,inline_set_value,indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++)if(i in this&&this[i]===item)return i;return-1};inline_set_value=function($inline,value){var data,field,results;if("object"==typeof value){null!=value.id&&$inline.attr("data-id",value.id),results=[];for(field in value)data=value[field],"$"!==field[0]&&results.push($inline.find("."+field+", :input[name="+field+"]").each(function(){return inline_set_field($(this),data)}));return results}},inline_set_field=function($inline,value){var functions,type;if($inline.is(":input"))return $inline.val(value);for(type in TYPES)if(functions=TYPES[type],$inline.is("."+type))return void functions.set($inline,value);return $inline.text(value)},inline_get_field=function($inline){var functions,ref,type;if($inline.is(":input"))return null!=(ref=$inline.val())?ref:"";for(type in TYPES)if(functions=TYPES[type],$inline.is("."+type))return("function"==typeof functions.get?functions.get($inline):void 0)||$inline.val()||$inline.text();return TYPES.plaintext.get($inline)},jQuery.fn.ival=function(value){return this.is(":input")?this.val(value):null===value?this:void 0!==value?this.each(function(){return inline_set_value($(this),value)}):this.map(function(){var $field,$model,attribute,data,field,j,l,len,len1,model,ref,ref1;if($model=$(this),model=get_model_for_instance(this),!model)return null;for(data={},ref=get_fields_for_model(model),j=0,len=ref.length;j<len;j++)field=ref[j],$field=$model.find("."+field).eq(0),$field.length&&(data[field]=inline_get_field($field));for(ref1=$model.get(0).attributes,l=0,len1=ref1.length;l<len1;l++)attribute=ref1[l],"data-"===attribute.name.slice(0,5)&&(data[attribute.name.slice(5)]=attribute.value);return data.id&&(data.id=Number(data.id)),data})},get_model_for_instance=function(element){var classes,model;classes=element.className.split(/\s+/);for(model in MODELS)if(indexOf.call(classes,model)>=0)return model;return null},get_fields_for_model=function(model){return MODELS[model]},jQuery.fn.ifields=function(){var $fields;return $fields=$(),this.each(function(){var $model,field,j,len,model,ref,results;for(model=get_model_for_instance(this),$model=$(this),ref=get_fields_for_model(model),results=[],j=0,len=ref.length;j<len;j++)field=ref[j],results.push($fields=$fields.add($model.find("."+field)));return results}),$fields},jQuery.fn.iedit=function(element){return this.each(function(){var $model,model;if($model=$(this),$model.addClass("editing"),model=get_model_for_instance(this))return $.each(get_fields_for_model(model),function(i,field){var $field,type;if($field=$model.find("."+field),$field.length&&!$field.is(".read-only")){$field.addClass("editing");for(type in TYPES)if($field.is("."+type))return void TYPES[type].enter($field);return TYPES.plaintext.enter($field)}})})},jQuery.fn.icanceledit=function(element){return this.each(function(){var $model,model;if($model=$(this),$model.removeClass("editing"),model=get_model_for_instance(this))return $.each(get_fields_for_model(model),function(i,field){var $field,type;if($field=$model.find("."+field),$field.length&&!$field.is(".read-only")){$field.addClass("editing");for(type in TYPES)if($field.is("."+type))return void TYPES[type].exit($field);return TYPES.plaintext.exit($field)}})})},jQuery.fn.isave=function(options){return null==options&&(options={}),this.each(function(){var $model,creating,data,method,model,ref,url;return $model=$(this),model=get_model_for_instance(this),data=null!=(ref=options.data)?ref:$model.ival()[0],url="/api/v2/"+model.toLowerCase()+"/",creating=!data.id,method="POST",creating?delete data.id:url+=data.id+"/",$.ajax({url:url,type:"POST",contentType:"application/json",headers:{"X-HTTP-Method-Override":method,"X-CSRFToken":window.csrf_token},data:JSON.stringify(data,function(k,v){return""===v?"":v}),success:function(_this){return function(data,text_status,xhr){var location,ref1;return location=xhr.getResponseHeader("Location"),$model.removeClass("modified"),$model.find("button.save").eq(0).remove(),location?$.getJSON(location,function(data){var ref1;if(null!=(ref1=options.success)&&ref1.call(_this,data),data)return $model.ival(data)}):(data&&$model.ival(data),null!=(ref1=options.success)?ref1.call(_this,data):void 0)}}(this),error:function(_this){return function(jqXHR,text_status,error_thrown){var ref1,ref2,result;return 400===jqXHR.status?(result=JSON.parse(jqXHR.responseText),null!=(ref1=options.invalid)?ref1.call(_this,result):void 0):null!=(ref2=options.error)?ref2.apply(_this,arguments):void 0}}(this)})})},jQuery.fn.idelete=function(options){return null==options&&(options={}),this.each(function(){var $model,data,model;return model=get_model_for_instance(this),$model=$(this),data=$model.ival()[0],$.ajax({url:"/api/v2/"+model.toLowerCase()+"/"+data.id+"/",type:"POST",contentType:"application/json",headers:{"X-HTTP-Method-Override":"DELETE"},success:function(_this){return function(data){var ref;return $model.addClass("deleted"),null!=(ref=options.success)?ref.call(_this,data):void 0}}(this),error:function(_this){return function(data){var ref;return null!=(ref=options.error)?ref.apply(_this,arguments):void 0}}(this)})})},this.parse_editor_date=function(date_string){var cleaned;return cleaned=$.trim(date_string).replace(/[\s\n]+/g," ").replace(".",""),moment(cleaned)},jQuery(function(){return $("body").on("click",".editable-region .start-edit",function(e){return e.preventDefault(),e.stopPropagation(),$(this).closest(".editable-region").iedit(),$(this).find(":input, .markdown").eq(0).focus().select()}).on("click",".editable-region .cancel-edit",function(e){return e.preventDefault(),e.stopPropagation(),$(this).closest(".editable-region").icanceledit()}).on("click","[data-id] .save",function(e){var $model;return e.preventDefault(),e.stopPropagation(),$model=$(this).closest("[data-id]"),$model.isave({success:function(_this){return function(){return $model.icanceledit()}}(this)})})}),this.MODELS={Article:["grade_level","lexile_level","title","teaser","text","author_display_name","is_original","image","image_caption"],ArticleHeader:["image_credit","short_title","reader_warning","teacher_warning"],Quiz:["quiz_questions"],QuizQuestion:["cc_anchor_standard","text","type","display_order","difficulty","quiz_question_choices"],QuizQuestionChoice:["text"],StudentQuiz:["date_started","date_completed","score"],User:["first_name","last_name","email","username","external_id"],Classroom:["name","grade"],StudentClassroom:[]},this.TYPES={plaintext:{get:function($field){return $field.val()||$field.text()},set:function($field,value){$field.text(value)},enter:function($field){for(var $input=$("<input />").attr({type:"text"}).val($field.text()),attributes=$field.get(0).attributes,i=0;i<attributes.length;++i)$input.attr(attributes[i].name,attributes[i].value);$input.addClass("form-control"),$field.replaceWith($input)},exit:function($field){for(var $input=$field,$span=$("<span />").text($input.val()),attributes=$field.get(0).attributes,i=0;i<attributes.length;++i)$span.attr(attributes[i].name,attributes[i].value);$span.removeClass("form-control"),$input.replaceWith($span)}},password:{set:function($field,value){$field.val(value)},enter:function($field){$field.replaceWith($("<input />").attr({type:"password",value:"","class":$field.get(0).className}))},exit:function($field){$field.replaceWith($("<span />").html(new Array(15).join("&bull;")).attr({"class":$field.get(0).className}))}},grade_level:{set:function($field,value){$field.text(value)},enter:function($field){$select=$("<select />").addClass($field.get(0).className).addClass("form-control");for(var i=3;i<=12;++i)$select.append($("<option />").attr("value",i).text("Grade "+i));var parts=$.trim($field.text()).split(/\s+/);parts.length&&$select.val(parts[parts.length-1]),$field.replaceWith($select)},exit:function($field){$field.replaceWith($("<span />").text($field.val()).attr({"class":$field.get(0).className}).removeClass("form-control"))}},contenteditable:{enter:function($field){$field.prop("contenteditable",!0)},exit:function($field){$field.prop("contenteditable",!1)},get:function($field){return $.trim($field.text())},set:function($field,value){$field.html(value)}},markdown:{enter:function($field){$field.hallo({plugins:{halloheadings:{formatBlocks:["p","h2","blockquote"]},halloformat:{}},editable:!0}).on("hallomodified",function(e){$field.addClass("modified")})},exit:function($field){$field.hallo({editable:!1})},get:function($field){var $html=$field.clone();$html.find(":not(p, h2, a, img, b, i, strong, em, blockquote, h3)").each(function(){$(this).before($(this).contents()).remove()});var furtherSanitized=$html.html().replace(/<!--[\s\S]*?-->/g,""),turndownService=new TurndownService({headingStyle:"atx"}),markdown=$.trim(turndownService.turndown(furtherSanitized));return markdown},set:function($field,value){}},image:{enter:function(){},exit:function(){},get:function($field){return $field.attr("src")},set:function($field,value){$field.attr("src",value)}},date:{enter:function($field){$field.hallo({editable:!0}).on("hallomodified",function(e){$field.addClass("modified");var date=parse_editor_date($field.text());$field.toggleClass("invalid",!date.isValid())})},exit:function($field){$field.hallo({editable:!1})},get:function($field){return parse_editor_date($field.text())},set:function($field,value){$field.empty(),$field.text(moment(value).format("L"))}},natural_datetime:{enter:function($field){},exit:function($field){},get:function($field){return parse_editor_date($field.text())},set:function($field,value){$field.empty(),$field.text(moment(value).fromNow())}}}}).call(this);