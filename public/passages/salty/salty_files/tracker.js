(function(){var Tracker,bind=function(fn,me){return function(){return fn.apply(me,arguments)}};Tracker=function(){function Tracker(){this.send_to_kinesis=bind(this.send_to_kinesis,this);var e;this.VISIBILITY_THRESHOLD=.5,this.impression_queue=[],this.content_elements=[],this.seen_impressions={},this.TAG_FORMAT_VERSION=2;try{this.intersection_observer=new IntersectionObserver(function(_this){return function(entries){return _this._observation_handler(entries)}}(this),{threshold:this.VISIBILITY_THRESHOLD})}catch(error){e=error}}return Tracker.prototype.get_user_id=function(){return window.user_id},Tracker.prototype.send_to_kinesis=function(stream_name,data,callback){var payloads;return payloads=[{stream_name:stream_name,payload:data}],this._ferry(payloads,callback)},Tracker.prototype.track_user_event=function(data,callback){var d,now,payloads;return _.isArray(data)||(data=[data]),now=new Date,payloads=function(){var i,len,ref,ref1,ref2,results;for(results=[],i=0,len=data.length;i<len;i++)d=data[i],results.push({stream_name:"user-events",payload:{user_id:null!=(ref=d.user_id)?ref:this.get_user_id(),date_created:moment(null!=(ref1=d.date_created)?ref1:now).utc().format("YYYY-MM-DD HH:mm:ss"),event_name:d.event_name,event_type:d.event_type,platform:"web",properties:null!=(ref2=d.properties)?ref2:{}}});return results}.call(this),this._ferry(payloads,callback)},Tracker.prototype._ferry=function(payloads,callback){var e,promise;if(window.SER_DAVOS_URL){promise=null;try{promise=$.ajax({url:window.SER_DAVOS_URL+"/ferry",type:"POST",contentType:"application/json",dataType:"json",data:JSON.stringify(payloads),xhrFields:{withCredentials:!0}})}catch(error){e=error,"undefined"!=typeof Raven&&null!==Raven&&Raven.captureException(e)}if(promise&&"function"==typeof callback)return promise.always(callback)}else if(console.warn("A ferry attempt was made, but Davos is not available."),console.log(payloads),"function"==typeof callback)return callback()},Tracker.prototype.register_content_element=function(element,model,id,format,event_source){return model&&id&&this.intersection_observer?(element.dataset.trackerModel=model,element.dataset.trackerId=id,element.dataset.trackerFormat=format,element.dataset.trackerEventSource=event_source,this.intersection_observer.observe(element),function(_this){return function(){return _this.intersection_observer.unobserve(element)}}(this)):function(_this){return function(){return null}}(this)},Tracker.prototype._observation_handler=function(entries){var data,entry,i,id,len,results;for(results=[],i=0,len=entries.length;i<len;i++)entry=entries[i],entry.intersectionRatio>this.VISIBILITY_THRESHOLD&&(this.intersection_observer.unobserve(entry.target),data=entry.target.dataset,(id=Number(data.trackerId))||(id=data.trackerId),results.push(this._track_content_impression(entry.target,data.trackerModel,id,data.trackerFormat,data.trackerEventSource)));return results},Tracker.prototype._track_content_impression=function(element,model,id,format,event_source){var data,key,rect;if(rect=element.getBoundingClientRect(),data={version:this.TAG_FORMAT_VERSION,tag:"content-impression",client_date:(new Date).toISOString(),user_id:this.get_user_id(),model:model,model_id:id,format:format,event_source:event_source,top:Math.floor(rect.top),left:Math.floor(rect.left),path:window.location.pathname,search:window.location.search,hash:window.location.hash},key=[data.model,data.model_id,data.format,data.event_source,data.path,data.search,data.pathname].join("|"),!this.seen_impressions[key])return this.seen_impressions[key]=!0,this.impression_queue.push(data),this._impression_pid&&clearTimeout(this._impression_pid),this._impression_pid=setTimeout(function(_this){return function(){var payload;return _this._ferry(function(){var i,len,ref,results;for(ref=this.impression_queue,results=[],i=0,len=ref.length;i<len;i++)payload=ref[i],results.push({stream_name:"application-tags",payload:payload});return results}.call(_this)),_this.impression_queue=[]}}(this),2e3)},Tracker}(),this.tracker=new Tracker}).call(this);